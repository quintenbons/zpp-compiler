== Parsing

== Done parsing
[35m[Node_TranslationUnit] Function count: 0
[0m[35m[Node_TranslationUnit] Class count: 1
[0m[35m  [Node_Class] Name: SimpleClass ; Members: 2
[0m[35m  [Node_AccessSpecifier] Visibility: Public
[0m[35m    [Node_ClassAttribute] Type: int
[0m[35m      [Node_Variable] attribute
[0m[35m    [Node_ClassMethod] ReturnType: int ; Name: method ; ParamCount: 1
[0m[35m      [Node_Type] int
[0m[35m      [Node_FunctionParameterList] ParameterCount: 1
[0m[35m        [Node_FunctionParameter] Type: int
[0m[35m          [Node_Variable] a
[0m[35m      [Node_CodeBlock] InstructionCount: 1
[0m[35m        [Node_ReturnStatement] 
[0m[35m        [Node_NumberLiteral] 0
[0m[35m  [Node_AccessSpecifier] Visibility: Protected
[0m[35m  [Node_AccessSpecifier] Visibility: Private
[0m
== Decorating
[35mScopeStack of 2 scopes
[0m[35m[Scope] id=0 ; parent=0
  [Type] id=1 ; name=char ; size=1
  [Type] id=2 ; name=int ; size=4
  [Type] id=0 ; name=void ; size=0
[0m[35m[Scope] id=1 ; parent=0
[0m
== Done decorating
[35m[Node_TranslationUnit] Function count: 0
[0m[35m[Node_TranslationUnit] Class count: 1
[0m[35m  [Node_Class] Name: SimpleClass ; Members: 2
[0m[35m  [Node_AccessSpecifier] Visibility: Public
[0m[35m    [Node_ClassAttribute] Type: int
[0m[35m      [Node_Variable] attribute
[0m[35m    [Node_ClassMethod] ReturnType: int ; Name: method ; ParamCount: 1
[0m[35m      [Node_Type] int
[0m[34m        [Decoration] TypeDescription: int ; Size: 4 ; Id: 2
[0m[35m      [Node_FunctionParameterList] ParameterCount: 1
[0m[35m        [Node_FunctionParameter] Type: int
[0m[35m          [Node_Variable] a
[0m[35m      [Node_CodeBlock] InstructionCount: 1
[0m[35m        [Node_ReturnStatement] 
[0m[35m        [Node_NumberLiteral] 0
[0m[35m  [Node_AccessSpecifier] Visibility: Protected
[0m[35m  [Node_AccessSpecifier] Visibility: Private
[0m
== Generating code
TODO Implement classNodes